plugins {
    alias(libs.plugins.android.library)
    // id 'com.android.library'
    alias(libs.plugins.kotlin.android)
    // id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.devtools.ksp'
    id 'androidx.room'
}

android {
    compileSdk = 36
    defaultConfig {
        minSdk 23
        targetSdk 36
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    /*
    kotlinOptions {
        jvmTarget = '17'
        // for default fun of Kotlin
        freeCompilerArgs = ['-Xjvm-default=all']
    }
    */

    kotlin {
        jvmToolchain(17)
    }

    namespace 'com.smile.smilelibraries'

    // Add this block
    room {
        schemaDirectory "$projectDir/schemas"
    }
}

allprojects {
    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

dependencies {
    implementation libs.androidx.appcompat
    implementation libs.androidx.legacy.support.v4
    implementation libs.androidx.constraintlayout
    implementation libs.audience.network.sdk
    implementation libs.google.ads.mediation.facebook
    implementation libs.infer.annotation
    implementation libs.firebase.ads
    implementation libs.androidx.databinding.runtime

    // Retrofit
    implementation libs.retrofit  // support api under 21
    implementation libs.converter.gson
    // implementation(libs.androidx.room.runtime)
    // To use Kotlin Symbol Processing (KSP)
    // ksp(libs.androidx.room.compiler)
    // optional - Kotlin Extensions and Coroutines support for Room
    // implementation(libs.androidx.room.ktx)
}
